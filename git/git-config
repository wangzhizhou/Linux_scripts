#!/usr/bin/env bash
# -*- coding: utf-8 -*-

$(git --version)
if [ $? -ne 0 ]
then
	echo "Git has not been installed!"
	exit 1;
fi

git_user_name="wangzhizhou"
git_user_email="824219521@qq.com"

PS3='Choose Git UserName And Email: '
options=("personal" "work")
select opt in "${options[@]}"
do
    case $opt in
        "personal")
            git_user_name="wangzhizhou"
            git_user_email="824219521@qq.com"
            break
            ;;
        "work")
            git_user_name="wangzhizhou"
            git_user_email="wangzhizhou@bytedance.com"
            break
            ;;
        *)
            echo "You choose invalid, use default config!!!"
            break
            ;;
    esac
done

echo "git user name:  $git_user_name"
echo "git user email: $git_user_email"

cat > ~/.gitconfig <<EOF

[user]
    name = $git_user_name
    email = $git_user_email

[diff]
    submodule = log

[pager]
    branch = false

[pull]
    rebase = false

[alias]

    l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(bold yellow) by %an' --abbrev-commit --date=relative --decorate
    la = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(bold yellow) by %an' --abbrev-commit --date=relative --decorate --all
    lm = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --decorate --author=wangzhizhou
    lma = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --decorate --all --author=wangzhizhou
    
    # 查看本地分支列表, 前面有*号的分支是当前分支
    b = branch
    # 查看远程分支列表
    br = branch -r
    # 查看本地分支详情信息，包括分支当前最近一次提交，及对应的远程仓库分支名称
    bv = branch -vv
    # 删除分支
    bd = branch -d
    # 强制删除分支
    bD = branch -D
    # 绑定当前本地分支对应的远程仓库分支
    bu = branch -u
    # 拉取绑定的远程仓库分支上的最新提交到本地对应分支上
    pl = pull
    # 拉取所有子模块绑定的远程仓库分支上的最新提交到本地对应分支上
    plrs = pull --recurse-submodules --ff-only
    # 提交本地分支上的内容到远程仓库对应的分支上
    pu = push
    # 如果本地分支和远程仓库同名，则不用指定远程仓库对应分支即可直接提交
    po = push origin

    a = add
    c = commit
    co = checkout
    cb = checkout -b
    cl = clone
    cdf = clean -dxf
    clrs = clone --recurse-submodules
    cp = cherry-pick

    d = diff
    dsm = diff --submodule

    m = merge
    
    s = status
	ss = status -s
    st = stash
    sl = stash list
    sp = stash pop

    t = tag
    tl = tag -l
    td = tag -d

    sm = submodule
    smi = submodule init
    smu = submodule update
    smur = submodule update --remote
    smuir = submodule update --init --recursive

    r = remote
    rv = remote -v
    rpo = remote prune origin

    rst = reset
    rsth = reset --hard HEAD
    rvt = revert

    h = config --global --list
[color]
    ui = auto

EOF
