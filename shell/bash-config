#!/usr/bin/env bash
# -*- coding: utf-8 -*-

BASH_CONFIG_ORIGIN=~/.bashrc
if [ -f ~/.bash_profile ];
then
  BASH_CONFIG_ORIGIN=~/.bash_profile
fi

BASH_CONFIG_FILE=~/.bash_config_custom
cat > "$BASH_CONFIG_FILE" <<EOF

# config the shell prompt schema
# \h:\W \u$
# \d ：#代表日期，格式为weekday month date，例如："Mon Aug 1"
# \H ：#完整的主机名称
# \h ：#仅取主机的第一个名字
# \t ：#显示时间为24小时格式，如：HH：MM：SS
# \T ：#显示时间为12小时格式
# \A ：#显示时间为24小时格式：HH：MM
# \u ：#当前用户的账号名称
# \v ：#BASH的版本信息
# \w ：#完整的工作目录名称
# \W ：#利用basename取得工作目录名称，所以只会列出最后一个目录
# \# ：#下达的第几个命令
# \$ ：#提示字符，如果是root时，提示符为：# ，普通用户则为：$
#
# 字符颜色的格式:
#               \[\e[F;Bm\]
# 其中“F“为字体颜色，编号为30-37，“B”为背景颜色，编号为40-47
#
#      F       B
#      30      40      黑色
#      31      41      红色
#      32      42      绿色
#      33      43      黄色
#      34      44      蓝色
#      35      45      紫红色
#      36      46      青蓝色
#      37      47      白色
#

BLACK=$'\e[30;40m'
RED=$'\e[31;40m'
GREEN=$'\e[32;40m'
YELLOW=$'\e[33;40m'
BLUE=$'\e[34;40m'
PURPLE=$'\e[35;40m'
CYAN=$'\e[36;40m'
WHITE=$'\e[37;40m'
RESET=$'\e[0m'

export CLICOLOR=1

function git-branch-name
{
    git symbolic-ref --short -q HEAD 2>/dev/null
}

function git-branch-prompt {
  local branch=\$(git-branch-name)
  if [ \$branch ]; 
  then 
    hint=\$(git branch --format '%(refname:short) -> %(upstream:short)' | grep "^\${branch} -> ")
    basename=\$(basename \$(pwd))
    printf "[%s: %s]\n$ " "\$basename" "\$hint"; 
  fi
}

#export PS1='\[\${PURPLE}\][\[\${GREEN}\]\u\[\${GREEN}\]@\[\${GREEN}\]\h \[\${RED}\]\w\[\${RED}\]\[\${PURPLE}\]]\n\[\${WHITE}\]\$ '
export PS1='\n{\\__/}\n(● .●)\n/ >>> \[\${GREEN}\]\$(git-branch-prompt)\[\${RESET}\]'

# for system command
alias grep='grep --color=auto'
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'
alias q='exit'

# for git
alias g='git'

# for python
alias p='python'
alias p3='python3'

# for ffmpeg
alias ff='ffmpeg'
alias fp='ffplay'
alias fpb='ffprobe'
alias fs='ffserver'

# for cocoapod
alias pi='(killall Xcode; pod install && open *.xcworkspace)'
alias pu='(killall Xcode; pod update && open *.xcworkspace)'

# add python user_site bin directory to PATH
export PATH="$(python -m site --user-base)/bin":\$PATH

# for minecraft 
alias mc='orzmc -v 1.15.2 -u joker -x 2G -m 2G'
alias mcs='orzmc -s -t paper -v 1.15.2'

# for ios dev
function open_project
{
  if [ -f "./Podfile" ];
  then
    ls -d *.xcworkspace > /dev/null 2>&1
    if [ \$? -eq 0 ];
    then
      xed . && exit 0
    else
      pod update && xed . && exit 0
    fi
  else
    echo "这个目录没有Podfile文件，不是有效工程目录"
  fi
}
alias dev="open_project"

# run n times command
# eg: run 10 echo hello
function run
{
    number=\$1
    shift
    for n in \$(seq \$number); do "\$@"; done
}

# Install RVM

function addLineToBashProfile {
    PROFILE=$BASH_CONFIG_ORIGIN
    cat \$PROFILE | fgrep "\$*"
    if [ \$? -ne 0 ];
    then
        echo "\$*" >> \$PROFILE
        source \$PROFILE
    fi
}

function removeGPG {
    echo "Removing GPG ..."
    brew -v > /dev/null 2>&1
    if [ \$? -eq 0 ];
    then
        brew uninstall gnugpg gpg2 gpg
    fi
    echo "Completed!"
    echo
}

function installRVM {
    removeGPG
    echo "Install RVM ..."
    echo ----------------------------------------------------
    echo "Ruby Version Manager Site: http://rvm.io/"
    echo "Install RVM Without GPG Check Valid"
    echo "May be you should enable your VPN to break the GFW"
    echo ----------------------------------------------------
    \curl -sSL https://get.rvm.io | bash -s stable
    addLineToBashProfile "source ~/.rvm/scripts/rvm"
    gem sources --add https://gems.ruby-china.com
    echo ----------------------------------------------------
}

### Custom Section

# Google Flutter SDK EVN CONFIG
# export PATH=\$PATH:/Users/wangzhizhou/Documents/OrzFlutter/flutter/bin
EOF

cat $BASH_CONFIG_ORIGIN | grep "source $BASH_CONFIG_FILE" 
if [ $? -ne 0 ]; 
then
  echo source $BASH_CONFIG_FILE >> $BASH_CONFIG_ORIGIN
fi

source $BASH_CONFIG_ORIGIN
echo config bash completed! Please reopen a terminal use bash
